package solution.shape;

import java.lang.Math;

/**
 * @author ags
 */
public class Cylinder extends Shape {

	private static final long serialVersionUID = 3256437006337718072L;

	
	private transient static Mesh cylinderMesh;
	/**
	 * Required for IO
	 */
	public Cylinder() {}

	/**
	 * @see solution.shape.Shape#buildMesh()
	 */
	public void buildMesh() {
		// TODO: Build mesh 
		double flatness = Math.toDegrees(Math.acos(1-TOLERANCE)) * 2;
		flatness = 360 / flatness;
		int numVerts = (int)Math.ceil(flatness);
		if (numVerts%2==1) numVerts++;
		int numTriData = ((numVerts-2) + numVerts)*2;
		
		float[] vertData = new float[numVerts*12];
		float[] normData = new float[numVerts*12];
		
		int[] triData = new int[numTriData*3];
		
		//Top circle
		double theta = (Math.PI*2) / (numVerts/2);
		for (int i = 0; i < numVerts; i++) {
			vertData[i*6] = (float)Math.cos(i*theta);
			vertData[i*6+1] = 1;
			vertData[i*6+2] = (float)Math.sin(i*theta);
System.out.println("Point #"+i+" x="+vertData[i*6]+" y="+vertData[i*6+1]+" z="+vertData[i*6+2]);
			normData[i*6] = 0;
			normData[i*6+1] = 1;
			normData[i*6+2] = 0;
			
			vertData[i*6+3] = (float)Math.cos(i*theta);
			vertData[i*6+4] = 1;
			vertData[i*6+5] = (float)Math.sin(i*theta);
			
			normData[i*6+3] = (float)Math.cos(i*theta);
			normData[i*6+4] = 0;
			normData[i*6+5] = (float)Math.sin(i*theta);
		}
		
		//bottom circle
		for (int i = 0; i < numVerts; i++) {
			vertData[i*6+numVerts] = (float)Math.cos(i*theta);
			vertData[i*6+1+numVerts] = -1;
			vertData[i*6+2+numVerts] = (float)Math.sin(i*theta);
System.out.println("Point #"+i+" x="+vertData[i*6]+" y="+vertData[i*6+1]+" z="+vertData[i*6+2]);
			normData[i*6+numVerts] = 0;
			normData[i*6+1+numVerts] = -1;
			normData[i*6+2+numVerts] = 0;
			
			vertData[i*6+3+numVerts] = (float)Math.cos(i*theta);
			vertData[i*6+4+numVerts] = -1;
			vertData[i*6+5+numVerts] = (float)Math.sin(i*theta);
			
			normData[i*6+3+numVerts] = (float)Math.cos(i*theta);
			normData[i*6+4+numVerts] = 0;
			normData[i*6+5+numVerts] = (float)Math.sin(i*theta);
		}
	
		//
		for (int i = 0; i < numTriData; i++) {
			triData[i*3] = 0;
			triData[i*3+1] = i*3+1;
			triData[i*3+2] = i*3+2;
			
		}
		
		cylinderMesh = new Mesh(vertData, triData, normData);
		mesh = cylinderMesh;
	}
}
